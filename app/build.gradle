apply plugin: 'com.android.application'

android {
    def keystoreStream = new FileInputStream(rootProject.file('private.properties'))
    def keyProperties = new Properties()
    keyProperties.load(keystoreStream)

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.androidwind.github"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        multiDexEnabled true


        buildConfigField "String", "QUICKHUB_CLIENT_ID", keyProperties['quickhub_client_id']
        buildConfigField "String", "QUICKHUB_CLIENT_SECRET", keyProperties['quickhub_client_secret']

    }

    signingConfigs {
        release {
            keyAlias keyProperties['KEY_ALIAS']
            keyPassword keyProperties['KEY_PWD']
            storeFile file(keyProperties['KEYSTORE_FILE'])
            storePassword keyProperties['KEYSTORE_PWD']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            minifyEnabled false
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //base
    implementation 'com.androidwind:androidquick:3.0.3'
    //processor
    annotationProcessor rootProject.ext.processorLibs
    //flurry
    implementation 'com.flurry.android:analytics:12.1.0@aar'
    //leakCanary
    debugApi rootProject.ext.toolDeps["leakcanary-debug"]
    releaseApi rootProject.ext.toolDeps["leakcanary-release"]
    //stetho
    implementation "com.facebook.stetho:stetho:1.5.1"
    // tool 上面两种写法只是为了展示不同的写法, 可以用如下写法统一处理:
//    api rootProject.ext.toolLibs
    // support
    api rootProject.ext.supportLibs
    // common
    api rootProject.ext.commonLibs
    // rx serials
    api rootProject.ext.rxLibs
    // network
    api rootProject.ext.networkLibs
    // other
    api rootProject.ext.otherLibs
}
